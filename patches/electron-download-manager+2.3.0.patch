diff --git a/node_modules/electron-download-manager/index.d.ts b/node_modules/electron-download-manager/index.d.ts
new file mode 100644
index 0000000..fe88fc9
--- /dev/null
+++ b/node_modules/electron-download-manager/index.d.ts
@@ -0,0 +1,49 @@
+import { DownloadItem } from 'electron';
+
+declare namespace ElectronDownloadManager {
+  export interface RegisterOptions {
+    /** Directory to download files in. Defaults to app.getPath('downloads') */
+    downloadFolder?: string;
+  }
+
+  export interface DownloadOptions {
+    url: string;
+    /** Directory to save file in, relative to downloadFolder */
+    path?: string;
+    headers?: { name: string; value: string }[];
+    /** Emitted when an authenticating proxy is asking for user credentials. */
+    onLogin?: Function;
+    onProgress?: (progress: DownloadProgress, item: DownloadItem) => void;
+  }
+
+  export interface BulkDownloadOptions {
+    urls: string[];
+    /** Directory to save file in, relative to downloadFolder */
+    path?: string;
+  }
+
+  export type DownloadProgress = number;
+
+  /** Called when download has reached 'done' state
+   * @param err The error, if any, that interrupted the download
+   * @param info An object containing the downloaded url and destination path
+   */
+  export type DownloadCompleteCallback = (
+    err: any,
+    info: { url: string; filePath: string }
+  ) => void;
+}
+
+declare module 'electron-download-manager' {
+  function register(opts?: ElectronDownloadManager.RegisterOptions): void;
+
+  function download(
+    options: ElectronDownloadManager.DownloadOptions,
+    callback: ElectronDownloadManager.DownloadCompleteCallback
+  ): void;
+
+  function bulkDownload(
+    options: ElectronDownloadManager.BulkDownloadOptions,
+    callback: (err: any, finished: string[], failed: string[]) => void
+  ): void;
+}
